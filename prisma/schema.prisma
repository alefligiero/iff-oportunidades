// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- MODELOS DE AUTENTICAÇÃO E PERFIS ---

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  studentProfile Student?
  companyProfile Company?
}

model Student {
  id        String @id @default(cuid())
  name      String
  matricula String @unique

  userId String      @unique
  user   User        @relation(fields: [userId], references: [id])
  
  internships Internship[]
}

model Company {
  id    String @id @default(cuid())
  name  String
  cnpj  String @unique

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
  
  jobVacancies  JobVacancy[]
}

// --- MODELOS CENTRAIS DO NEGÓCIO ---

model Internship {
  id        String   @id @default(cuid())
  status    InternshipStatus @default(IN_ANALYSIS)
  type      InternshipType   @default(DIRECT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rejectionReason String?

  // Dados do Aluno (alguns podem ser preenchidos automaticamente)
  studentId             String
  student               Student          @relation(fields: [studentId], references: [id])
  studentGender         Gender
  studentAddressStreet  String
  studentAddressNumber  String
  studentAddressDistrict String
  studentAddressCityState String
  studentAddressCep     String
  studentPhone          String
  studentCpf            String
  studentCourse         Course
  studentCoursePeriod   String
  studentSchoolYear     String

  // Dados da Empresa (informados pelo aluno)
  companyName                 String
  companyCnpj                 String
  companyRepresentativeName   String
  companyRepresentativeRole   String
  companyAddressStreet        String
  companyAddressNumber        String
  companyAddressDistrict      String
  companyAddressCityState     String
  companyAddressCep           String
  companyEmail                String
  companyPhone                String

  // Detalhes do Estágio
  modality             InternshipModality
  startDate            DateTime
  endDate              DateTime
  weeklyHours          Int
  dailyHours           String
  monthlyGrant         Float
  transportationGrant  Float
  advisorProfessorName String
  advisorProfessorId   String
  supervisorName       String
  supervisorRole       String
  internshipSector     String
  technicalActivities  String

  // Detalhes do Seguro
  insuranceCompany      String
  insurancePolicyNumber String
  insuranceCompanyCnpj  String
  insuranceStartDate    DateTime?
  insuranceEndDate      DateTime?
  insuranceProofUrl     String? // Para o upload do comprovativo

  // Relação com Documentos
  documents Document[]
}

model Document {
  id                String   @id @default(cuid())
  type              DocumentType
  status            DocumentStatus @default(PENDING_ANALYSIS)
  fileUrl           String?
  rejectionComments String?

  internshipId String
  internship   Internship @relation(fields: [internshipId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JobVacancy {
  id           String    @id @default(cuid())
  title        String
  description  String
  type         VacancyType
  status       VacancyStatus @default(PENDING_APPROVAL)
  
  companyId String
  company   Company @relation(fields: [companyId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// --- ENUMS (Tipos e Status) ---

enum Role {
  ADMIN
  STUDENT
  COMPANY
}

enum Gender {
  MALE
  FEMALE
}

enum Course {
  BSI
  LIC_QUIMICA
  ENG_MECANICA
  TEC_ADM_INTEGRADO
  TEC_ELETRO_INTEGRADO
  TEC_INFO_INTEGRADO
  TEC_QUIMICA_INTEGRADO
  TEC_AUTOMACAO_SUBSEQUENTE
  TEC_ELETRO_CONCOMITANTE
  TEC_MECANICA_CONCOMITANTE
  TEC_QUIMICA_CONCOMITANTE
}

enum InternshipModality {
  PRESENCIAL
  REMOTO
}

enum InternshipStatus {
  IN_ANALYSIS
  APPROVED
  IN_PROGRESS
  FINISHED
  CANCELED
}

enum InternshipType {
  DIRECT
  INTEGRATOR
}

enum DocumentType {
  TCE
  PAE
  PERIODIC_REPORT
  TRE
  RFE
  SIGNED_CONTRACT
  LIFE_INSURANCE
}

enum DocumentStatus {
  PENDING_ANALYSIS
  APPROVED
  REJECTED
  SIGNED_VALIDATED
}

enum VacancyType {
  INTERNSHIP
  JOB
}

enum VacancyStatus {
  PENDING_APPROVAL
  APPROVED
  REJECTED
  CLOSED_BY_COMPANY
}
